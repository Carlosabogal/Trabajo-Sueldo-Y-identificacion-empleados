
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.sql.ResultSet;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;


public class frmPrincipal extends javax.swing.JFrame {
    BD mBD = new BD("jdbc:mysql://localhost/empleado","root","");
    DefaultTableModel modelo=new DefaultTableModel();
    Conexion cc= null;
    Connection cn= null;
    ResultSet rs = null;
    PreparedStatement ps = null;
    String ruta = null;
    
    
    /**
     * Creates new form frmPrincipal
     */
    public frmPrincipal() {
        initComponents();
    }
    
    
    public ResultSet visualizar(){    
    Conexion conn = new Conexion();
    Connection con = conn.conectar();

        ResultSet rs = null;
        try{
            PreparedStatement ps = con.prepareStatement("select * from trabajador");
            rs = ps.executeQuery();
        }catch(Exception ex){
            System.out.println("Error de consulta");
        }
        return rs;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        Panel = new javax.swing.JDesktopPane();
        txtNombreEmpleado = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtApellidoEmpleado = new javax.swing.JTextField();
        btnMostrar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        txtDocumento = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSalarioEmpleado = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txIngreso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnBuscarFoto = new javax.swing.JButton();
        jLImg = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtSexo = new javax.swing.JComboBox<>();
        jDCfecha = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenuItem4.setText("jMenuItem4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtNombreEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreEmpleadoActionPerformed(evt);
            }
        });

        jLabel3.setText("Fecha De nacimiento");

        btnMostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/imMostarT.png"))); // NOI18N
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/imgSalir.png"))); // NOI18N
        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/imgBuscar.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocumentoActionPerformed(evt);
            }
        });

        jLabel8.setText("Salario");

        jLabel4.setText("Documento");

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/imgGuardar.png"))); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellido");

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/imgEliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscarFoto.setText("BUSCAR FOTO");
        btnBuscarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarFotoActionPerformed(evt);
            }
        });

        jLabel7.setText("Sexo");

        txtSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F", "NINGUNO", " " }));

        jLabel5.setText("Fecha De Ingreso");

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/imgActualizar.png"))); // NOI18N
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        Tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Documento", "Nombre", "Apellido", "Fehca De Nacimiento", "Fecha de ignreso", "Foto", "Salario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Tabla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla1);

        Panel.setLayer(txtNombreEmpleado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(txtApellidoEmpleado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(btnMostrar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(btnCerrar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(btnBuscar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(txtDocumento, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(txtSalarioEmpleado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(btnGuardar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(txIngreso, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(btnEliminar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(btnBuscarFoto, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(jLImg, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(txtSexo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(jDCfecha, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(btnActualizar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        Panel.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBuscarFoto)
                        .addGap(51, 51, 51)
                        .addComponent(jLImg, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel3)
                            .addComponent(jLabel8)
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel7))
                            .addComponent(jLabel5))
                        .addGap(33, 33, 33)
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtApellidoEmpleado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSalarioEmpleado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNombreEmpleado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(PanelLayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txIngreso, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                                        .addComponent(txtSexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jDCfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnEliminar)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)))
                        .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnBuscarFoto))
                    .addComponent(jLImg, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtNombreEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnGuardar)))
                        .addGap(9, 9, 9)
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addComponent(btnBuscar)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCerrar))
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jDCfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtApellidoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(PanelLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(43, 43, 43)
                                        .addComponent(jLabel7))
                                    .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSalarioEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreEmpleadoActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed

        Tabla1.setDefaultRenderer(Object.class, new TablaImagen());
    
        ArrayList Imagenes;
        ImagenTrabajador mImagenTrabajador;
        Conexion con =  new Conexion();
        Connection conn = con.conectar();
            
        modelo.addColumn("documento");
        modelo.addColumn("nombre");
        modelo.addColumn("apellido");
        modelo.addColumn("fecha de nacimiento");
        modelo.addColumn("sexo");
        modelo.addColumn("fecha de ingreso");
        modelo.addColumn("foto");
        modelo.addColumn("salario");
        modelo.addColumn("Prestaciones");
        modelo.addColumn("Edad");
        modelo.addColumn("Años trabajando");

        Date date = new Date();

        ZoneId timeZone = ZoneId.systemDefault();
        LocalDate getLocalDate = date.toInstant().atZone(timeZone).toLocalDate();
              
        

   
            Object Datos[] = new Object[11];
            Imagenes = con.CargarImagenes();
             //System.out.println("El valor de las imagenes es " + Imagenes);

            if (Imagenes != null) {
                for (int i = 0; i < Imagenes.size(); i++) {
                    mImagenTrabajador = (ImagenTrabajador) Imagenes.get(i);
                    Datos[0] = String.valueOf(mImagenTrabajador.getImagen_id());
                    Datos[1] = mImagenTrabajador.getNombre();
                    Datos[2] = mImagenTrabajador.getApellido();
                    Datos[4] = mImagenTrabajador.getSexo();
                    
                    Datos[3] = String.valueOf(mImagenTrabajador.getFecha_De_Nacimiento());
                    Datos[5] = String.valueOf(mImagenTrabajador.getFecha_De_Ingreso());
                    Datos[7] = String.valueOf(mImagenTrabajador.getSalario());
                    Datos[8] = String.valueOf(((Integer.valueOf(mImagenTrabajador.getSalario()))*(Integer.valueOf(getLocalDate.getYear())-Integer.valueOf(mImagenTrabajador.getFecha_De_Ingreso())))/12);
                    DateTimeFormatter fmt = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                   // LocalDate fechaNac = LocalDate.parse(String.valueOf(mImagenTrabajador.getFecha_De_Nacimiento()),fmt);
                   Datos[9] = String.valueOf(Integer.valueOf(getLocalDate.getYear())-Integer.valueOf(mImagenTrabajador.getFecha_De_Nacimiento().substring(0,4)));
                   Datos[10] = String.valueOf(Integer.valueOf(getLocalDate.getYear())-Integer.valueOf(mImagenTrabajador.getFecha_De_Ingreso()));
                    
                   //LocalDate hoy = LocalDate.now();   
// LocalDate nacimiento = mImagenTrabajador.getFecha_De_Nacimiento().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(); 
// long edad = ChronoUnit.YEARS.between(nacimiento, hoy); 
//                    System.out.printf("Tu edad es: %s años, %s meses y %s días",edad.getYears(), edad.getMonths(), edad.getDays());

                    try {
                        byte[] imagen = mImagenTrabajador.getImagen();
                        BufferedImage bufferedImage = null;
                        InputStream inputStream = new ByteArrayInputStream(imagen);
                        bufferedImage = ImageIO.read(inputStream);
                        ImageIcon mIcono = new ImageIcon(bufferedImage.getScaledInstance(60, 60, 0));
                        Datos[6] = new JLabel(mIcono);
              
                    } catch (Exception e) {
                        Datos[6] = new JLabel("No imagen");
                    }
                    //System.out.println("El modelo de las imagenes es " + modelo);
                    modelo.addRow(Datos);

                }

                Tabla1.setModel(modelo);
                Tabla1.setRowHeight(60);               
                Tabla1.getColumnModel().getColumn(0).setPreferredWidth(60);
                Tabla1.getColumnModel().getColumn(1).setPreferredWidth(60);
                 Tabla1.getColumnModel().getColumn(6).setPreferredWidth(60);

            }
        
        
        
        
        
        /*
         Conexion conn = new Conexion();
    Connection con = conn.conectar();

    //Image img = null;   
    Tabla1.setDefaultRenderer(Object.class, new TablaImagen());
    DefaultTableModel dt = new DefaultTableModel();
    dt.addColumn("Nombre");
    dt.addColumn("Foto");
    
    try{
        
        while(rs.next()){
                Object[] fila = new Object[7];
                fila[0] = rs.getObject(2);
                
                Blob blob = rs.getBlob(7);

                if(blob != null){
                   try{
                        byte[] data = blob.getBytes(1, (int)blob.length());
                        BufferedImage img = null;
                        try{
                        img = ImageIO.read(new ByteArrayInputStream(data));
                        }catch(Exception ex){
                        System.out.println(ex.getMessage());
                        }
                    ImageIcon icono = new ImageIcon(img);
                    fila[1] = new JLabel(icono);
                        }catch(Exception ex){
                            fila[1] = "No Imagen";
                        }
                }
                else{
                    fila[1] = "No Imagen";
                }
                
                dt.addRow(fila);  
            }
        
        Tabla1.setModel(dt);
        Tabla1.setRowHeight(64);
    }catch(Exception ex){
        System.out.println(ex.getMessage());
        ex.printStackTrace();   
    }  
 */       
        /*        modelo = new DefaultTableModel();
        modelo.addColumn("documento");
        modelo.addColumn("nombre");
        modelo.addColumn("apellido");
        modelo.addColumn("fecha de nacimiento");
        modelo.addColumn("sexo");
        modelo.addColumn("fecha de ingreso");
        modelo.addColumn("foto");
        modelo.addColumn("salario");


        try {
            Conexion cc = new Conexion();
            Connection cn = cc.conectar();
            ps = cn.prepareStatement("SELECT * FROM trabajador");
            rs = ps.executeQuery();
            String [] dato = new String[8];
            while(rs.next()){
                dato[0] = rs.getString(1);
                dato[1] = rs.getString(2);
                dato[2] = rs.getString(3);
                dato[3] = rs.getString(4);
                dato[4] = rs.getString(5);
                dato[5] = rs.getString(6);
                dato[6] = rs.getString(7);
                dato[7] = rs.getString(8);
                modelo.addRow(dato);

            }
            Tabla1.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
*/
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        String b =JOptionPane.showInputDialog("Ingrese el documento a buscar");

        try {
            cc = new Conexion();
            cn = cc.conectar();
            ps = cn.prepareStatement("SELECT * FROM trabajador WHERE documento = ?");
            ps.setString(1,b);
            rs = ps.executeQuery();

            if (rs.next()) {

                txtDocumento.setText(rs.getString (1));
                txtNombreEmpleado.setText(rs.getString(2));
                txtApellidoEmpleado.setText(rs.getString(3));
            }
            else {
                JOptionPane.showMessageDialog(null, "No existe el profesor en la base de datos");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

        /*

        */
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDocumentoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        File archivofoto = new File(ruta);        
        
        //Date date =    
        Conexion cc = new Conexion();
        Connection cn = cc.conectar();
        try {
            FileInputStream convertir_imagen = new FileInputStream (archivofoto);

            PreparedStatement ps = cn.prepareStatement("INSERT INTO trabajador VALUES (?,?,?,?,?,?,?,?)");
            ps.setString(1,txtDocumento.getText());
            ps.setString(2, txtNombreEmpleado.getText());
            ps.setString(3,txtApellidoEmpleado.getText());
            ps.setString(4,txtSexo.getSelectedItem().toString());
            ps.setString(5,jDCfecha.getDateFormatString());
            ps.setBlob(6,convertir_imagen, archivofoto.length());
  

            ps.setString(7,txIngreso.getText());
            ps.setString(8, txtSalarioEmpleado.getText());
            System.out.println(jLImg.getText().getBytes());

            ps.executeUpdate();

        }catch(SQLException ex) {
            System.out.printf(ex.getMessage());

        } catch (FileNotFoundException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        //        validar();
        Limpiar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        //
    }//GEN-LAST:event_btnEliminarActionPerformed
File archivo;
    private void btnBuscarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarFotoActionPerformed
        // TODO add your handling code here:
        
        int resultado;
        buscarimg Buscador=new buscarimg();
        FileNameExtensionFilter formato= new FileNameExtensionFilter("JPG, PNG Y GIF","jpg","png","gif");
        Buscador.JFCImg.setFileFilter(formato);
        resultado=Buscador.JFCImg.showOpenDialog(null);
        if(JFileChooser.APPROVE_OPTION == resultado){
            archivo= Buscador.JFCImg.getSelectedFile();
            ruta = archivo.getAbsolutePath();
            //jLDireccion.setText(archivo.getAbsolutePath());
            try{
              ImageIcon ImgIcon= new ImageIcon(ruta);
              
              Icon icono = new ImageIcon(ImgIcon.getImage().getScaledInstance(jLImg.getWidth(),jLImg.getHeight(),Image.SCALE_DEFAULT));
            
               jLImg.setIcon(icono);
            }catch(Exception ex){
        
            JOptionPane.showMessageDialog(null,"Error al abrir" + ex);
        }
        
        }
        
                
        /*File archivo;
        JFileChooser flcAbrirArchivo=new JFileChooser();
        flcAbrirArchivo.setFileFilter(new FileNameExtensionFilter("archivo de imagen","jpg","jpeg"));
        int respuesta=flcAbrirArchivo.showOpenDialog(this);
            
        if(respuesta==JFileChooser.APPROVE_OPTION){
            
            archivo=flcAbrirArchivo.getSelectedFile();
            nombre_foto.setText(archivo.getAbsolutePath());
            Image foto=getToolkit().getImage(nombre_foto.getText());
            foto=foto.getScaledInstance(262,234,1);
            imagen.setIcon(new ImageIcon(foto));
        
        
        }
        */

    }//GEN-LAST:event_btnBuscarFotoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed


            cc = new Conexion();
            cn = cc.conectar();

        try {
            PreparedStatement ps = cn.prepareStatement("UPDATE trabajador SET Salario = "+ txtSalarioEmpleado.getText()+" WHERE documento="+txtDocumento.getText());
            ps.executeUpdate();
            System.out.print(ps);
            
            Limpiar();

        JOptionPane.showMessageDialog(null, "Salario actualizado");
        } catch (SQLException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
      
               
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void Tabla1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla1MouseClicked
        // TODO add your handling code here:
     int fila = Tabla1.getSelectedRow();
     if(fila>=0){
     //buscar.setText(Tabla1.getValueAt(fila,0).toString());
     txtDocumento.setText(Tabla1.getValueAt(fila,0).toString());
     txtNombreEmpleado.setText(Tabla1.getValueAt(fila,1).toString());
     txtApellidoEmpleado.setText(Tabla1.getValueAt(fila,2).toString());
     jDCfecha.setDateFormatString(Tabla1.getValueAt(fila,3).toString());
     txtSexo.setSelectedItem(Tabla1.getValueAt(fila,4).toString());
     txIngreso.setText(Tabla1.getValueAt(fila,5).toString());
     txtSalarioEmpleado.setText(Tabla1.getValueAt(fila,7).toString());
     }
     else{
     JOptionPane.showMessageDialog(null,"Fila no seleccionada");
     }
    }//GEN-LAST:event_Tabla1MouseClicked

   public static Integer calcularEdad(String fecha){
   Date fechaNac=null;
       try {
           /**Se puede cambiar la mascara por el formato de la fecha 
           que se quiera recibir, por ejemplo año mes día "yyyy-MM-dd"
           en este caso es día mes año*/
           fechaNac = new SimpleDateFormat("dd-MM-yyyy").parse(fecha);
       } catch (Exception ex) {
           System.out.println("Error:"+ex);
       }
       Calendar fechaNacimiento = Calendar.getInstance();
       //Se crea un objeto con la fecha actual
       Calendar fechaActual = Calendar.getInstance();
       //Se asigna la fecha recibida a la fecha de nacimiento.
       fechaNacimiento.setTime(fechaNac);
       //Se restan la fecha actual y la fecha de nacimiento
       int año = fechaActual.get(Calendar.YEAR)- fechaNacimiento.get(Calendar.YEAR);
       int mes =fechaActual.get(Calendar.MONTH)- fechaNacimiento.get(Calendar.MONTH);
       int dia = fechaActual.get(Calendar.DATE)- fechaNacimiento.get(Calendar.DATE);
       //Se ajusta el año dependiendo el mes y el día
       if(mes<0 || (mes==0 && dia<0)){
           año--;
       }
      
       return año;
   }
    public static void main(String args[]) {
      
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipal().setVisible(true);
            }
        });
    }
public void Limpiar() {
        txtNombreEmpleado.setText("");
     
        txtApellidoEmpleado.setText("");
      //  jDCfecha.setText("");
        jLImg.setText("");
       // txtSexo.setText("");
        txIngreso.setText("");
        txtSalarioEmpleado.setText("");
  
        txtNombreEmpleado.requestFocus();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane Panel;
    private javax.swing.JTable Tabla1;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarFoto;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnMostrar;
    private com.toedter.calendar.JDateChooser jDCfecha;
    private javax.swing.JLabel jLImg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txIngreso;
    private javax.swing.JTextField txtApellidoEmpleado;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtNombreEmpleado;
    private javax.swing.JTextField txtSalarioEmpleado;
    private javax.swing.JComboBox<String> txtSexo;
    // End of variables declaration//GEN-END:variables
}
